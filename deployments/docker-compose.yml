services:
  database-mongo:
    container_name: ${MONGO_CONTAINER_NAME}
    image: mongo:4.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: mongod --quiet --logpath /dev/null
    ports:
      - ${MONGO_INITDB_PORT}:${MONGO_INITDB_PORT}
    volumes:
      - dsgo-database-mongo:/data/db
    restart: ${MONGO_RESTART}
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --quiet | grep 1
      interval: 12s
      timeout: 12s
      retries: 12

  database-mysql:
    container_name: ${MYSQL_CONTAINER_NAME}
    image: mysql:8.3
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    volumes:
      - dsgo-database-mysql:/var/lib/mysql
    restart: ${MYSQL_RESTART}
    healthcheck:
      test: mysqladmin ping -h database-mysql --silent
      interval: 12s
      timeout: 12s
      retries: 12

  server:
    container_name: ${SERVER_CONTAINER_NAME}
    image: ${SERVER_IMAGE_TAG}
    build:
      context: ..
      dockerfile: deployments/Dockerfile
      target: ${SERVER_BUILD_TARGET}
    environment:
      MONGO_URI: "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@database-mongo:${MONGO_INITDB_PORT}"
      MONGO_DATABASE: ${MONGO_DATABASE}
      MYSQL_DSN: "${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(database-mysql:${MYSQL_PORT})"
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      SQLITE_DATABASE: ${SQLITE_DATABASE}
      ALLOWED_HOSTS: ${SERVER_ALLOWED_HOSTS}
      URL: ${SERVER_URL}
      GIN_MODE: ${SERVER_MODE}
      PORT: ${SERVER_PORT}
    command: ${SERVER_COMMAND}
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
      - ${SERVER_PROXY_PORT}:${SERVER_PROXY_PORT}
    volumes:
      - ${SERVER_VOLUMES_APP}
      - dsgo-modules:/go/pkg/mod
    restart: ${SERVER_RESTART}
    depends_on:
      database-mongo:
        condition: service_healthy
      database-mysql:
        condition: service_healthy

volumes:
  dsgo-database-mongo:
    name: ${MONGO_DATABASE_VOLUME}
  dsgo-database-mysql:
    name: ${MYSQL_DATABASE_VOLUME}
  dsgo-server:
    name: dsgo-server
  dsgo-modules:
    name: dsgo-modules
