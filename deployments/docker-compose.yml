services:
  database-mongo:
    container_name: ${DATABASE_MONGO_CONTAINER_NAME}
    image: mongo:4.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_MONGO_ROOT_PASSWORD}
    command: mongod --quiet --logpath /dev/null
    ports:
      - ${DATABASE_MONGO_PORT}:${DATABASE_MONGO_PORT}
    volumes:
      - dsgo-database-mongo:/data/db
    restart: ${DATABASE_MONGO_CONTAINER_RESTART}
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u ${DATABASE_MONGO_ROOT_USERNAME} -p ${DATABASE_MONGO_ROOT_PASSWORD} --quiet | grep 1
      interval: 12s
      timeout: 12s
      retries: 12

  database-mysql:
    container_name: ${DATABASE_MYSQL_CONTAINER_NAME}
    image: mysql:8.3
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_MYSQL_NAME}
      MYSQL_USER: ${DATABASE_MYSQL_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_MYSQL_PASSWORD}
    ports:
      - ${DATABASE_MYSQL_PORT}:${DATABASE_MYSQL_PORT}
    volumes:
      - dsgo-database-mysql:/var/lib/mysql
    restart: ${DATABASE_MYSQL_CONTAINER_RESTART}
    healthcheck:
      test: mysqladmin ping -h database-mysql --silent
      interval: 12s
      timeout: 12s
      retries: 12

  server:
    container_name: ${SERVER_CONTAINER_NAME}
    image: ${SERVER_IMAGE_TAG}
    build:
      context: ..
      dockerfile: deployments/Dockerfile
      target: ${SERVER_IMAGE_BUILD_TARGET}
    environment:
      DATABASE_MONGO_URI: "mongodb://${DATABASE_MONGO_ROOT_USERNAME}:${DATABASE_MONGO_ROOT_PASSWORD}@database-mongo:${DATABASE_MONGO_PORT}"
      DATABASE_MONGO_NAME: ${DATABASE_MONGO_NAME}
      DATABASE_MYSQL_DSN: "${DATABASE_MYSQL_USERNAME}:${DATABASE_MYSQL_PASSWORD}@tcp(database-mysql:${DATABASE_MYSQL_PORT})"
      DATABASE_MYSQL_NAME: ${DATABASE_MYSQL_NAME}
      DATABASE_SQLITE_NAME: ${DATABASE_SQLITE_NAME}
      SERVER_URL: "${SERVER_URL}:${SERVER_GIN_PORT}"
      SERVER_GIN_PORT: ${SERVER_GIN_PORT}
      GIN_MODE: ${SERVER_GIN_MODE}
      SERVER_GIN_ALLOWED_HOSTS: ${SERVER_GIN_ALLOWED_HOSTS}
    command: ${SERVER_CONTAINER_START}
    ports:
      - ${SERVER_GIN_PORT}:${SERVER_GIN_PORT}
      - ${SERVER_AIR_PROXY_PORT}:${SERVER_AIR_PROXY_PORT}
    volumes:
      - ${SERVER_CONTAINER_VOLUME}
      - dsgo-modules:/go/pkg/mod
    restart: ${SERVER_CONTAINER_RESTART}
    depends_on:
      database-mongo:
        condition: service_healthy
      database-mysql:
        condition: service_healthy

volumes:
  dsgo-database-mongo:
    name: ${DATABASE_MONGO_CONTAINER_VOLUME}
  dsgo-database-mysql:
    name: ${DATABASE_MYSQL_CONTAINER_VOLUME}
  dsgo-server:
    name: dsgo-server
  dsgo-modules:
    name: dsgo-modules
