// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.707
package layout

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/bastean/dsgo/internal/app/server/component/scripts"
	"github.com/bastean/dsgo/internal/app/server/component/scripts/fomantic"
	"github.com/bastean/dsgo/internal/app/server/component/scripts/jquery"
	"github.com/bastean/dsgo/internal/app/server/component/scripts/storage"
)

func Index(headScripts scripts.Head, bodyScripts scripts.Body) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><!-- Meta --><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"description\" content=\"dsgo\"><meta name=\"keywords\" content=\"dsgo\"><meta name=\"theme-color\" content=\"#131313\"><meta name=\"apple-mobile-web-app-capable\" content=\"yes\"><meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\"><!-- Remove \"meta robots\" and \"robots.txt\" rules for SEO --><meta name=\"robots\" content=\"noindex, nofollow, noarchive, nositelinkssearchbox, nosnippet, notranslate, noimageindex\"><!-- Properties --><title>dsGO</title><link rel=\"manifest\" href=\"/public/static/manifest.json\"><link rel=\"apple-touch-icon\" href=\"/public/static/assets/apple-touch-icon.png\"><link rel=\"icon\" href=\"/public/static/assets/favicon.png\"><!-- Dependencies --><!-- jQuery --><script src=\"/public/static/dist/jquery.com/jquery.min.js\"></script><!-- Fomantic-UI --><link rel=\"stylesheet\" type=\"text/css\" href=\"/public/static/dist/fomantic-ui.com/semantic.min.css\"><script src=\"/public/static/dist/fomantic-ui.com/semantic.min.js\"></script><!-- Lodash --><script src=\"/public/static/dist/lodash.com/lodash.min.js\"></script><!-- Scripts --><!-- dsGO -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = storage.Init().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!-- jQuery -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = jquery.Init().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!-- Fomantic-UI -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = fomantic.Init().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!-- Any -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, headScript := range headScripts {
			templ_7745c5c3_Err = headScript.Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</head><body><div class=\"ui basic inverted vertical segment\" style=\"height: 100%; overflow-x: hidden; overflow-y: auto;\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, bodyScript := range bodyScripts {
			templ_7745c5c3_Err = bodyScript.Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
