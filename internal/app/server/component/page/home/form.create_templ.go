// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.707
package home

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

var CreateFormTagId = "create"

func CreateFormInit(formTagId string) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_CreateFormInit_24c3`,
		Function: `function __templ_CreateFormInit_24c3(formTagId){$(` + "`" + `#${formTagId}` + "`" + `)
        .form({
            on: "blur",
            inline : true,
            preventLeaving: true,
            keyboardShortcuts: false,
            fields: {
                Name: {
                    rules: [
                        {
                            type: "size[2..20]"
                        },
                        {
                            type: "regExp[/^[A-Za-z0-9]+$/]",
                            prompt: "{name} must be alphanumeric only"
                        },
                        {
                            type: "regExp[/^.*[^0-9].*$/]",
                            prompt: "{name} cannot be only numbers"
                        }
                    ]
                },
                Role: {
                    rules: [
                        {
                            type   : "exactCount[1]",
                            prompt : "Select a role"
                        },
                    ]
                },
                Terms: {
                    rules: [
                        {
                            type: "checked",
                            prompt: "Terms & Conditions must be checked"
                        }
                    ]
                }
            }
        })
        .api({
            action: "create user", 
            method: "PUT",
            onSuccess: function(response, element, xhr) {
                $.toast({
                    class: "success",
                    message: response.message,
                    showProgress: "top",
                });

                _.delay(function() {
                    $(` + "`" + `#${formTagId}` + "`" + `).form("reset");
                }, 1000);
            },
            onFailure: function(response, element, xhr) {
                $.toast({
                    class: "error",
                    message: response.message,
                    showProgress: "top"
                });
            }
        })
    ;
}`,
		Call:       templ.SafeScript(`__templ_CreateFormInit_24c3`, formTagId),
		CallInline: templ.SafeScriptInline(`__templ_CreateFormInit_24c3`, formTagId),
	}
}

func ShowTerms(modalTagId string) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_ShowTerms_48eb`,
		Function: `function __templ_ShowTerms_48eb(modalTagId){$(` + "`" + `#${modalTagId}` + "`" + `).modal("show")
}`,
		Call:       templ.SafeScript(`__templ_ShowTerms_48eb`, modalTagId),
		CallInline: templ.SafeScriptInline(`__templ_ShowTerms_48eb`, modalTagId),
	}
}

func CreateForm() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<form id=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(CreateFormTagId)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/app/server/component/page/home/form.create.templ`, Line: 76, Col: 27}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"ui inverted form\"><div class=\"required field\"><label>Name</label><div class=\"ui inverted transparent left icon input\"><i class=\"user icon\"></i> <input type=\"text\" placeholder=\"Name\" name=\"Name\"></div></div><div class=\"required field\"><label>Role</label><div class=\"ui inverted search clearable selection dropdown\" id=\"Role\"><input type=\"hidden\" name=\"Role\"> <i class=\"dropdown icon\"></i><div class=\"default text\">Select</div><div class=\"menu\"><div class=\"item\" data-value=\"administrator\"><i class=\"user shield icon\"></i>Administrator</div><div class=\"item\" data-value=\"moderator\"><i class=\"users icon\"></i>Moderator</div><div class=\"item\" data-value=\"contributor\"><i class=\"people carry icon\"></i>Contributor</div></div></div></div><div class=\"ui divider\"></div><div class=\"ui middle aligned center aligned grid\"><div class=\"column\"><div class=\"inline required field\"><div class=\"ui inverted checkbox\"><input type=\"checkbox\" name=\"Terms\"> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, ShowTerms(TermsModalTagId))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<label style=\"cursor: pointer;\" onclick=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 templ.ComponentScript = ShowTerms(TermsModalTagId)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var3.Call)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\">I agree to the <a><b>terms and conditions</b></a></label></div></div><button class=\"ui vertical animated fluid primary submit button\"><div class=\"hidden content\"><i class=\"upload icon\"></i></div><div class=\"visible content\">Create</div></button></div></div></form>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = CreateFormInit(CreateFormTagId).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
